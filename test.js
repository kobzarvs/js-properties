// Generated by CoffeeScript 1.3.1
(function() {
  var TestClass, lib, test,
    __hasProp = {}.hasOwnProperty,
    __extends = function(child, parent) { for (var key in parent) { if (__hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor; child.__super__ = parent.prototype; return child; };

  lib = require('./js-properties.js');

  console.log(lib.Properties);

  TestClass = (function(_super) {

    __extends(TestClass, _super);

    TestClass.name = 'TestClass';

    function TestClass() {
      var _this = this;
      this.properties({
        root: {
          flag: {
            before_get: function() {
              return console.log('before get');
            },
            before_set: function() {
              return console.log('before set');
            }
          }
        }
      });
    }

    return TestClass;

  })(lib.Properties);

  test = new TestClass;

  test.root.flag = 1;

  console.log(test.root.flag);

  console.log(test.to_JSON());

  console.log(test.root.to_JSON());

}).call(this);
